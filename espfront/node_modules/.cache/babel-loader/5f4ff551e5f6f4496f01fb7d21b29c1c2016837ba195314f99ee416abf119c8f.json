{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"access-logs\"\n};\nconst _hoisted_2 = {\n  class: \"table\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"alert alert-info\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"alert alert-danger\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Access Logs\", -1 /* HOISTED */)), _createCommentVNode(\" Таблица для отображения логов \"), _createElementVNode(\"table\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"UID\"), _createElementVNode(\"th\", null, \"Status\"), _createElementVNode(\"th\", null, \"Timestamp\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.logs, log => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: log.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(log.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.uid), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(log.status), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(log.timestamp)), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Сообщение о загрузке или ошибке \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_Fragment","_renderList","$data","logs","log","id","_toDisplayString","uid","status","$options","formatDate","timestamp","loading","_hoisted_3","error","_hoisted_4"],"sources":["V:\\web\\ARDUINO\\espfront\\src\\components\\AccessLog.vue"],"sourcesContent":["<template>\r\n  <div class=\"access-logs\">\r\n    <h2>Access Logs</h2>\r\n\r\n    <!-- Таблица для отображения логов -->\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>UID</th>\r\n          <th>Status</th>\r\n          <th>Timestamp</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"log in logs\" :key=\"log.id\">\r\n          <td>{{ log.id }}</td>\r\n          <td>{{ log.uid }}</td>\r\n          <td>{{ log.status }}</td>\r\n          <td>{{ formatDate(log.timestamp) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Сообщение о загрузке или ошибке -->\r\n    <div v-if=\"loading\" class=\"alert alert-info\">Loading...</div>\r\n    <div v-if=\"error\" class=\"alert alert-danger\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EspData from \"../services/data_import\";\r\n\r\nexport default {\r\n  name: \"AccessLog\",\r\n  data() {\r\n    return {\r\n      logs: [],\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    // Метод для форматирования даты\r\n    formatDate(dateString) {\r\n      const options = {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      };\r\n      return new Date(dateString).toLocaleDateString(undefined, options);\r\n    },\r\n\r\n    // Метод для загрузки данных\r\n    fetchLogs() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      EspData.getLog()\r\n        .then((response) => {\r\n          this.logs = response.data;\r\n        })\r\n        .catch((error) => {\r\n          this.error = error.message || \"Failed to fetch logs\";\r\n          console.error(\"Error fetching logs:\", error);\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n  },\r\n  // Загружаем данные при монтировании компонента\r\n  mounted() {\r\n    this.fetchLogs();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.alert {\r\n  padding: 15px;\r\n  margin-top: 20px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.alert-info {\r\n  background-color: #d1ecf1;\r\n  color: #0c5460;\r\n}\r\n\r\n.alert-danger {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAIfA,KAAK,EAAC;AAAO;;EALxBC,GAAA;EAyBwBD,KAAK,EAAC;;;EAzB9BC,GAAA;EA0BsBD,KAAK,EAAC;;;uBAzB1BE,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJC,mBAAA,CAAoB,YAAhB,aAAW,sBAEfC,mBAAA,mCAAsC,EACtCD,mBAAA,CAiBQ,SAjBRE,UAiBQ,G,0BAhBNF,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAY,YAAR,KAAG,GACPA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAkB,YAAd,WAAS,E,wBAGjBA,mBAAA,CAOQ,iB,kBANNF,mBAAA,CAKKK,SAAA,QApBbC,WAAA,CAe0BC,KAAA,CAAAC,IAAI,EAAXC,GAAG;yBAAdT,mBAAA,CAKK;MALoBD,GAAG,EAAEU,GAAG,CAACC;QAChCR,mBAAA,CAAqB,YAAAS,gBAAA,CAAdF,GAAG,CAACC,EAAE,kBACbR,mBAAA,CAAsB,YAAAS,gBAAA,CAAfF,GAAG,CAACG,GAAG,kBACdV,mBAAA,CAAyB,YAAAS,gBAAA,CAAlBF,GAAG,CAACI,MAAM,kBACjBX,mBAAA,CAAwC,YAAAS,gBAAA,CAAjCG,QAAA,CAAAC,UAAU,CAACN,GAAG,CAACO,SAAS,kB;sCAKrCb,mBAAA,qCAAwC,EAC7BI,KAAA,CAAAU,OAAO,I,cAAlBjB,mBAAA,CAA6D,OAA7DkB,UAA6D,EAAhB,YAAU,KAzB3Df,mBAAA,gBA0BeI,KAAA,CAAAY,KAAK,I,cAAhBnB,mBAAA,CAA8D,OAA9DoB,UAA8D,EAAAT,gBAAA,CAAdJ,KAAA,CAAAY,KAAK,oBA1BzDhB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}